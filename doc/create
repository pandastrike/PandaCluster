-----------------------------------------------------------------
Usage: pandacluster create [Options] -k KEY_PAIR -n CLUSTER_NAME
-----------------------------------------------------------------
Follow any command with "help" for more information.

Spins up a CoreOS cluster on Amazon's EC2 cloud service according to several
specified options.

Required:
  -n  Name of cluster. Alpha-numeric string of at most 255 characters.

  -k  Name of SSH keypair.  Access to the cluster is achieved via an SSH
        connection.  The public key with this name is placed onto every CoreOS
        machine.  *If there is no key with this name present in your AWS account,
        you are alerted and the process fails.

--------------------------------------------------------------------------------
Optional:
  -i  Instance type on EC2. (Default = "m3.medium")  All machines in the cluster
        are of the same type.

        Allowed Values:
        "c1.medium", "c1.xlarge",
        "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge",
        "hi1.4xlarge", "hs1.8xlarge",
        "m1.medium", "m1.large", "m1.xlarge",
        "m2.xlarge", "m2.2xlarge", "m2.4xlarge",
        "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge",
        "t1.micro"

  -r  AWS Region.  Your default region is set in the PandaCluster dotfile, but you
        may temporarily override that region for this command.

        Allowed Values: "ap-northeast-1", "ap-southeast-1", "ap-southeast-2",
        "eu-central-1", "eu-west-1", "sa-east-1", "us-east-1", "us-west-1",
        "us-west-2"

  -s  Size of cluster. (Default = 3) Clusters must have between 3 and 12
        machines, inclusive.

  -t  Template File.  (Default = "Stable" Channel AMI using PV). This is a string
        containing a path to the AWS template file.  The path is relative
        to your working directory and include the template filename. If no
        template file is provided, PandaCluster pulls the latest CoreOS AMI from
        the "stable" channel and requests a build using para-virtualization (PV).
